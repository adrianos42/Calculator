use super::EngineStringsId;
use lazy_static::lazy_static;
use std::collections::hash_map::HashMap;

lazy_static! {
    static ref EN_US: HashMap<EngineStringsId, &'static str> = [
        (EngineStringsId::Ce, "CE"),
        (EngineStringsId::Rsh, "Rsh"),
        (EngineStringsId::Domain, "Invalid input"),
        (EngineStringsId::Undefined, "Result is undefined"),
        (EngineStringsId::Nomem, "Not enough memory"),
        (EngineStringsId::Overflow, "Overflow"),
        (EngineStringsId::Noresult, "Result not defined"),
        (EngineStringsId::Divide, "÷"),
        (EngineStringsId::ErrSgInvError, "Result not defined"),
        (EngineStringsId::ErrInputOverflow, "Overflow"),
        (EngineStringsId::Multiply, "×"),
        (EngineStringsId::ErrOutputOverflow, "Overflow"),
        (EngineStringsId::Plus, "+"),
        (EngineStringsId::Minus, "-"),
        (EngineStringsId::Mod, "Mod"),
        (EngineStringsId::YRoot, "yroot"),
        (EngineStringsId::PowHat, "^"),
        (EngineStringsId::Int, "Int"),
        (EngineStringsId::Rol, "Rol"),
        (EngineStringsId::Ror, "Ror"),
        (EngineStringsId::Not, "NOT"),
        (EngineStringsId::Xor, "XOR"),
        (EngineStringsId::And, "AND"),
        (EngineStringsId::Or, "OR"),
        (EngineStringsId::Lsh, "Lsh"),
        (EngineStringsId::Sin, "sin"),
        (EngineStringsId::Cos, "cos"),
        (EngineStringsId::Tan, "tan"),
        (EngineStringsId::Sinh, "sinh"),
        (EngineStringsId::Cosh, "cosh"),
        (EngineStringsId::Tanh, "tanh"),
        (EngineStringsId::Ln, "ln"),
        (EngineStringsId::Log, "log"),
        (EngineStringsId::Sqrt, "√"),
        (EngineStringsId::Dms, "dms"),
        (EngineStringsId::Powten, "10^"),
        (EngineStringsId::Percent, "%"),
        (EngineStringsId::DecimalSeparator, "."),
        (EngineStringsId::Pi, "Pi"),
        (EngineStringsId::Equal, "="),
        (EngineStringsId::Exp, "Exp"),
        (EngineStringsId::OpenParen, "("),
        (EngineStringsId::CloseParen, ")"),
        (EngineStringsId::Frac, "frac"),
        (EngineStringsId::Sind, "sin₀"),
        (EngineStringsId::Cosd, "cos₀"),
        (EngineStringsId::Tand, "tan₀"),
        (EngineStringsId::Asind, "sin₀⁻¹"),
        (EngineStringsId::Acosd, "cos₀⁻¹"),
        (EngineStringsId::Atand, "tan₀⁻¹"),
        (EngineStringsId::Sinr, "sinᵣ"),
        (EngineStringsId::Cosr, "cosᵣ"),
        (EngineStringsId::Tanr, "tanᵣ"),
        (EngineStringsId::Asinr, "sinᵣ⁻¹"),
        (EngineStringsId::Acosr, "cosᵣ⁻¹"),
        (EngineStringsId::Atanr, "tanᵣ⁻¹"),
        (EngineStringsId::Sing, "sin₉"),
        (EngineStringsId::Cosg, "cos₉"),
        (EngineStringsId::Tang, "tan₉"),
        (EngineStringsId::Asing, "sin₉⁻¹"),
        (EngineStringsId::Acosg, "cos₉⁻¹"),
        (EngineStringsId::Atang, "tan₉⁻¹"),
        (EngineStringsId::Asing, "sinh⁻¹"),
        (EngineStringsId::Acosh, "cosh⁻¹"),
        (EngineStringsId::Atanh, "tanh⁻¹"),
        (EngineStringsId::Powe, "e^"),
        (EngineStringsId::Powten2, "10^"),
        (EngineStringsId::Sqrt2, "√"),
        (EngineStringsId::Sqr, "sqr"),
        (EngineStringsId::Cube, "cube"),
        (EngineStringsId::Fact, "fact"),
        (EngineStringsId::Reciproc, "1/"),
        (EngineStringsId::Degrees, "degrees"),
        (EngineStringsId::Negate, "negate"),
        (EngineStringsId::Dividebyzero, "Cannot divide by zero"),
        (EngineStringsId::Secd, "sec₀"),
        (EngineStringsId::Secr, "secᵣ"),
        (EngineStringsId::Secg, "sec₉"),
        (EngineStringsId::Asecd, "sec₀⁻¹"),
        (EngineStringsId::Asecr, "secᵣ⁻¹"),
        (EngineStringsId::Asecg, "sec₉⁻¹"),
        (EngineStringsId::Cscd, "csc₀"),
        (EngineStringsId::Cscr, "cscᵣ"),
        (EngineStringsId::Cscg, "csc₉"),
        (EngineStringsId::Acscd, "csc₀⁻¹"),
        (EngineStringsId::Acscr, "cscᵣ⁻¹"),
        (EngineStringsId::Acscg, "csc₉⁻¹"),
        (EngineStringsId::Cotd, "cot₀"),
        (EngineStringsId::Cotr, "cotᵣ"),
        (EngineStringsId::Cotg, "cot₉"),
        (EngineStringsId::Acotd, "cot₀⁻¹"),
        (EngineStringsId::Acotr, "cotᵣ⁻¹"),
        (EngineStringsId::Acotg, "cot₉⁻¹"),
        (EngineStringsId::Sech, "sech"),
        (EngineStringsId::Asech, "sech⁻¹"),
        (EngineStringsId::Csch, "csch"),
        (EngineStringsId::Acsch, "csch⁻¹"),
        (EngineStringsId::Coth, "coth"),
        (EngineStringsId::Acoth, "coth⁻¹"),
        (EngineStringsId::TwoPowX, "2^"),
        (EngineStringsId::LogBaseY, "log base"),
        (EngineStringsId::Abs, "abs"),
        (EngineStringsId::Ceil, "ceil"),
        (EngineStringsId::Floor, "floor"),
        (EngineStringsId::Nand, "NAND"),
        (EngineStringsId::Nor, "NOR"),
        (EngineStringsId::CubeRoot, "cuberoot"),
        (EngineStringsId::ProgrammerMod, "%"),
    ]
    .iter()
    .cloned()
    .collect();
}
